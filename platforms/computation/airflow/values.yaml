airflow:
  auth:
    username: airflow
    existingSecret: airflow-auth-secret

  executor: CeleryExecutor
  loadExamples: true

  image:
    registry: docker.io
    repository: bitnami/airflow
    tag: 2.10.5-debian-12-r7

  dags:
    enabled: false

  plugins:
    enabled: false

  defaultInitContainers:
    prepareConfig:
      resourcesPreset: "none"
      resources: {}

    waitForDBMigrations:
      resourcesPreset: "none"
      resources: {}

    loadDAGsPlugins:
      resourcesPreset: "none"
      resources: {}

  web:
    baseUrl: airflow.fabricator.work:443
    containerPorts:
      http: 8080
    replicaCount: 1
    resourcesPreset: "none"
    resources: {}

  scheduler:
    replicaCount: 1
    resourcesPreset: "none"
    resources: {}

  dagProcessor:
    enabled: false

  triggerer:
    enabled: false

  worker:
    containerPorts:
      http: 8793
    replicaCount: 1
    resourcesPreset: "none"
    resources: {}

  setupDBJob:
    enabled: true
    backoffLimit: 10
    resourcesPreset: "none"
    resources: {}
    annotations:
      argocd.argoproj.io/hook: PostSync
      argocd.argoproj.io/hook-delete-policy: BeforeHookCreation


  service:
    type: ClusterIP
    ports:
      http: 8080

  ingress:
    enabled: false

  serviceAccount:
    create: true
  rbac:
    create: false

  metrics:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/statsd-exporter
      tag: 0.28.0-debian-12-r11
    existingConfigmap: "airflow-statsd-mapping-config"
    containerPorts:
      ingest: 9125
      metrics: 9102
    resourcesPreset: "none"
    resources: {}
    service:
      ports:
        ingest: 9125
        metrics: 9102
    serviceMonitor:
      enabled: true
      namespace: "prometheus"
      interval: "30s"
      scrapeTimeout: "30s"
      honorLabels: true

  postgresql:
    enabled: false

  externalDatabase:
    host: postgresql.postgresql.svc.cluster.local
    port: 5432
    user: airflow
    database: airflow
    existingSecret: airflow-pg-secret
    existingSecretPasswordKey: airflow-pg-password

  redis:
    enabled: true
    auth:
      enabled: true
      existingSecret: "airflow-redis-secret"
    architecture: standalone
    master:
      service:
        ports:
          redis: 6379
      resourcesPreset: "none"
      resources: {}
