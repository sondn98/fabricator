{{- $worker := mergeOverwrite (deepCopy .Values.commons) .Values.worker -}}
{{- $httpServer := .Values.httpServer }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "trino.fullname" . }}-worker
  labels:
    {{- include "trino.worker.labels" . | nindent 4 }}
    {{- with $worker.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- toYaml $worker.annotations | nindent 4 }}
spec:
  {{- with $worker.replicas }}
  replicas: {{ . }}
  {{- end }}
  serviceName: {{ include "trino.fullname" . }}-worker
  selector:
    matchLabels:
      {{- include "trino.worker.selectorLabels" . | nindent 6 }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "trino.worker.selectorLabels" . | nindent 8 }}
        {{- with $worker.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- include "trino.checksum" . | nindent 8 }}
        {{- with $worker.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      enableServiceLinks: false
      initContainers:
      {{- if .Values.metrics.enabled }}
        {{- include "trino.initContainers.jmxAgents" . | nindent 8 }}
      {{- end }}
      {{- if .Values.cache.enabled }}
        {{- include "trino.initContainer.cacheDirCreator" . | nindent 8}}
      {{- end }}
      containers:
        - name: trino-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with $worker.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with $worker.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          ports:
          {{- if $httpServer.http.enabled }}
            - name: http
              protocol: TCP
              containerPort: {{ $httpServer.http.port }}
          {{- end }}
          {{- if $httpServer.https.enabled }}
            - name: https
              protocol: TCP
              containerPort: {{ $httpServer.https.port }}
          {{- end }}
          {{- if .Values.metrics.enabled }}
            - name: metrics
              protocol: TCP
              containerPort: {{ .Values.metrics.port }}
          {{- end }}
          volumeMounts:
            {{- include "trino.worker.volumeMounts" . | nindent 12 }}
            {{- if .Values.cache.enabled }}
            - name: cache
              mountPath: /opt/trino/cache
            {{- end }}
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            {{- toYaml $worker.resources | nindent 12 }}
          securityContext:
            {{- toYaml $worker.securityContext | nindent 12 }}
      serviceAccountName: {{ include "trino.serviceAccountName" . }}
      priorityClassName:  {{ $worker.priorityClassName }}
      runtimeClassName:   {{ $worker.runtimeClassName }}
      schedulerName:      {{ $worker.schedulerName }}
      securityContext:
        {{- toYaml $worker.podSecurityContext | nindent 8 }}
      volumes:
        {{- include "trino.worker.volumes" . | nindent 8 }}
        {{- if and .Values.cache.enabled (not .Values.cache.persistence.enable) }}
        - name: cache
          emptyDir: {}
        {{- end }}
    {{- with $worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if or (and .Values.cache.enabled .Values.cache.persistence.enabled) .Values.spill.enabled }}
  volumeClaimTemplates:
    {{- include "trino.worker.volumeClaimTemplates" . | nindent 4 }}
  {{- end }}
