image:
  repository: trinodb/trino
  tag: 403

trino:
  ### JVM on Container
  # * https://merikan.com/2019/04/jvm-in-a-container/
  jvm.config: |
    -server
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:ReservedCodeCacheSize=256M
    -XX:+UseContainerSupport
    -XX:MaxRAMPercentage=96.0
    -XX:-UseCompressedOops
    -Dtrust_all_cert=true
  # -Djavax.net.ssl.trustStore=/etc/pki/k8s/truststore.p12
  # -Djavax.net.ssl.trustStorePassword=jTATy27H2jQquoGHTxar3gGXgdg354GSA
  ### Tuning Trino
  # * https://trino.io/docs/current/admin/tuning.html
  # * https://trino.io/docs/current/admin/properties-query-management.html
  # * https://docs.qubole.com/en/latest/troubleshooting-guide/ts-presto/presto-tuning.html
  config.properties:
    task.concurrency: 2
    query.max-run-time:       15m
    query.max-execution-time: 15m
    query.max-memory:         500MB
    query.max-total-memory:   1GB
    query.max-memory-per-node:       500MB
    memory.heap-headroom-per-node:   500MB
    task.low-memory-killer.policy: total-reservation-on-blocked-nodes
    query.remote-task.max-error-duration: 1m

  rules.json: |
    {{ tpl (readFile "configs/rules.json") . | nindent 4 | trim }}
  access-control.properties: |
    access-control.name=file
    security.config-file=etc/rules.json
    security.refresh-period=60s
  group-provider.properties: |
    group-provider.name=file
    file.group-file=etc/group.txt
    file.refresh-period=60s
  group.txt: |
    {{ tpl (readFile "configs/groups.txt") . | nindent 4 | trim }}

commons: {}
  # resources:
  #   requests:
  #     cpu: "1"
  #     memory: "1Gi"
  #   limits:
  #     cpu: "2"       # x4 request
  #     memory: "2Gi" # x4 request
  # extraVolumeMounts:
  # - name: certificate
  #   mountPath: /etc/pki/k8s/
  #   readOnly: true
  # extraVolumes:
  # - name: certificate
  #   secret:
  #     secretName: trino.demo.com-tls

worker:
  replicas: 3

cache:
  enabled: false

faultTolerant:
  policy: null

  exchangeManager:
    type: azure # s3, azure, gcs
    baseDirectories: ""
    compress: false
    tunning:
      sink-buffer-pool-min-size: 1
      sink-buffers-per-partition: 1
      sink-max-file-size: 1
      source-concurrent-reader: 2

    # s3:
    #   endpoint: http://minio.minio.svc:9000
    #   aws-access-key: admin
    #   aws-secret-key: SuperSecr3t
    #   region: aws-global
    #   max-error-retries: 3
    #   path-style-access: true

    azure:
      connection-string: connection-string

    # gcs:
    #   json-key-file-path: /path/to/gcs_keyfile.json

httpServer:
  http:
    enabled: true
    port: 8080
  # https:
  #   enabled: true
  #   port: 8443
  # keystore:
  #   path: /etc/pki/k8s/keystore.p12
  #   key: jTATy27H2jQquoGHTxar3gGXgdg354GSA
  # truststore:
  #   path: /etc/pki/k8s/truststore.p12
  #   key: jTATy27H2jQquoGHTxar3gGXgdg354GSA

catalog:
  jmx.properties: |
    {{ tpl (readFile "catalogs/jmx.properties") . | nindent 4 | trim }}
  postgresql.properties: |
    {{ tpl (readFile "catalogs/postgresql.properties") . | nindent 4 | trim }}
  mysql.properties: |
    {{ tpl (readFile "catalogs/mysql.properties") . | nindent 4 | trim }}

metrics:
  enabled: false

ingress:
  enabled: false

authen:
  enabled: false
